{"version":3,"sources":["AudioPane.js","App.js","serviceWorker.js","index.js"],"names":["AudioPane","props","audioPlayer","React","createRef","prevProps","prevState","snapshot","this","current","play","pause","load","audioElement","controls","ref","src","audio","type","id","Component","Alert","elevation","variant","App","sendTask","axios","post","text","state","then","response","data","request_successful","Error","message","setTimeout","checkProgress","catch","e","setState","buttonDisabled","progress","requestStatus","success","errorMessage","toString","snackbarOpen","get","PROGRESS_TRACKING_API","result","finished","retrieveResult","RESULT_RETRIEVING_API","synthesis_successful","textHasChanged","delete","RESULT_DELETING_API","handleSubmit","event","preventDefault","prev","handleChange","target","value","handleClose","innerHeight","window","innerWidth","red","green","blue","d_red","Math","random","d_green","d_blue","setInterval","addEventListener","alertInfo","length","messages","time","Date","getTime","onClose","severity","map","i","index","key","snackbar","Snackbar","open","autoHideDuration","rgb","Fragment","style","backgroundColor","Typography","color","marginBottom","onSubmit","TextField","multiline","placeholder","onChange","rowsMax","round","Button","size","disabled","margin","LinearProgress","href","Avatar","Boolean","location","hostname","match","theme","createMuiTheme","palette","primary","main","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.8fee723a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class AudioPane extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioPlayer = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.audioPlayer.current != null && this.props.play) {\r\n            this.audioPlayer.current.pause();\r\n            this.audioPlayer.current.load();\r\n            this.audioPlayer.current.play();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const audioElement =\r\n            <audio controls ref={this.audioPlayer}>\r\n                <source src={\"data:audio/mpeg;base64,\" + this.props.audio} type=\"audio/mpeg\"/>\r\n                Your browser does not support the audio element.\r\n            </audio>;\r\n        return(\r\n            <div id=\"result\">\r\n                {this.props.audio == null ? \"\" : audioElement}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport axios from 'axios';\nimport \"./App.css\"\nimport AudioPane from \"./AudioPane\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Avatar from '@material-ui/core/Avatar';\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nconst TASK_CREATING_API = \"https://xi-speech-synthesizer.herokuapp.com/task\";\nconst PROGRESS_TRACKING_API = \"https://xi-speech-synthesizer.herokuapp.com/progress\";\nconst RESULT_RETRIEVING_API = \"https://xi-speech-synthesizer.herokuapp.com/result\";\nconst RESULT_DELETING_API = \"https://xi-speech-synthesizer.herokuapp.com/result\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            audio: null,\n            buttonDisabled: false,\n            play: false,\n            progress: null,\n            requestStatus: {\n                success: true,\n                errorMessage: null\n            },\n            snackbarOpen: false,\n            innerHeight: window.innerHeight,\n            innerWidth: window.innerWidth,\n            red: 0,\n            green:0,\n            blue: 0\n        };\n        this.textHasChanged = false;\n        this.d_red = Math.random();\n        this.d_green = Math.random();\n        this.d_blue = Math.random();\n        setInterval(() => {\n            this.setState({\n                red: this.state.red + this.d_red,\n                green: this.state.green + this.d_green,\n                blue: this.state.blue + this.d_blue,\n                play: false\n            }, () => {\n                if (this.state.red <= 0 || this.state.red >= 50) {\n                    this.d_red *= -1\n                }\n                if (this.state.green <= 0 || this.state.green >= 50) {\n                    this.d_green *= -1\n                }\n                if (this.state.blue <= 0 || this.state.blue >= 50) {\n                    this.d_blue *= -1\n                }\n            });\n        }, 25)\n    }\n\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", () => {\n            this.setState({\n                innerHeight: window.innerHeight,\n                innerWidth: window.innerWidth,\n                play: false\n            })\n        });\n    }\n\n    sendTask = () => {\n        axios\n            .post(TASK_CREATING_API, {\n                text:this.state.text\n            })\n            .then(response => {\n                const successful = response.data.request_successful;\n                if (successful) {\n                    setTimeout(this.checkProgress, 250, response.data.id);\n                } else {\n                    throw new Error(response.data.message)\n                }\n            })\n            .catch(e => {\n                this.setState({\n                    audio: null,\n                    play: false,\n                    buttonDisabled: false,\n                    progress: null,\n                    requestStatus: {\n                        success: false,\n                        errorMessage: e.toString()\n                    },\n                    snackbarOpen: true,\n                });\n            });\n    };\n\n    checkProgress = (id) => {\n        axios\n            .get(PROGRESS_TRACKING_API + \"?id=\" + id)\n            .then(response => {\n                if (response.data.request_successful) {\n                    const result = response.data.result;\n                    this.setState({\n                        progress: result.progress\n                    });\n                    if (result.finished) {\n                        this.retrieveResult(id);\n                    } else {\n                        setTimeout(this.checkProgress, 500, id);\n                    }\n                } else {\n                    throw new Error(response.data.message)\n                }\n            }).catch((e) => {\n            this.setState({\n                audio: null,\n                play: false,\n                buttonDisabled: false,\n                progress: null,\n                requestStatus: {\n                    success: false,\n                    errorMessage: e.toString()\n                },\n                snackbarOpen: true,\n            })\n        })\n    };\n\n    retrieveResult = (id) => {\n        axios\n            .get(RESULT_RETRIEVING_API + \"?id=\" + id)\n            .then(response => {\n                if (response.data.request_successful) {\n                    const result = response.data.result;\n                    this.setState({\n                        audio: result.audio,\n                        play: true,\n                        buttonDisabled: false,\n                        progress: null,\n                        requestStatus: {\n                            success: result.synthesis_successful,\n                            errorMessage: result.message\n                        },\n                        snackbarOpen: true,\n                    });\n                    this.textHasChanged = false;\n                    return axios.delete(RESULT_DELETING_API + \"?id=\" + id)\n                } else {\n                    throw new Error(response.data.message)\n                }\n            })\n            .then(response => {\n                if (!response.data.request_successful) {\n                    throw new Error(response.data.message)\n                }\n            })\n            .catch(e => {\n                this.setState({\n                    //audio: null,\n                    play: false,\n                    buttonDisabled: false,\n                    progress: null,\n                    requestStatus: {\n                        success: false,\n                        errorMessage: e.toString()\n                    },\n                    snackbarOpen: true,\n                })\n            })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.textHasChanged) {\n            this.setState({\n                buttonDisabled: true,\n                progress: 0\n            });\n            this.sendTask();\n        } else {\n            this.setState((prev) => ({\n                play: true,\n                snackbarOpen: true,\n            }));\n        }\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            text: event.target.value,\n            play: false,\n            snackbarOpen: false,\n        });\n        this.textHasChanged = true;\n    };\n\n    handleClose = (event) => {\n        this.setState({\n            snackbarOpen: false,\n            play: false,\n        })\n    };\n\n    render() {\n        let alertInfo = \"\";\n        if (this.state.requestStatus.success) {\n            if (this.state.requestStatus.errorMessage && this.state.requestStatus.errorMessage.length > 0) {\n                const messages = this.state.requestStatus.errorMessage;\n                const length = messages.length;\n                const time = new Date().getTime();\n                alertInfo = (\n                    <Alert onClose={this.handleClose} severity=\"warning\">\n                        {messages.map((i, index) => (\n                            <span key={time + \"-\" + index}>{i}{index !== length - 1 ? <br/> : \"\"}</span>\n                        ))}\n                    </Alert>\n                )\n            } else {\n                alertInfo = (\n                    <Alert onClose={this.handleClose} severity=\"success\">\n                        正在播放\n                    </Alert>\n                )\n            }\n        } else {\n            alertInfo = (\n                <Alert onClose={this.handleClose} severity=\"error\">\n                    {this.state.requestStatus.errorMessage}\n                </Alert>\n            )\n        }\n        const snackbar = <Snackbar open={this.state.snackbarOpen} autoHideDuration={6000} onClose={this.handleClose}>\n            {alertInfo}\n        </Snackbar>;\n        const rgb = `rgb(${this.state.red},${this.state.green},${this.state.blue})`;\n        return (\n            <React.Fragment>\n                <div id=\"filter\" style={{backgroundColor: rgb}}/>\n                <div id=\"content\">\n                    <Typography\n                        variant={this.state.innerWidth < 650 ? \"h4\" : \"h3\"}\n                        color=\"textPrimary\"\n                        style={{marginBottom: 24}}>\n                        习近平讲话模拟器\n                    </Typography>\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField\n                            id=\"text\"\n                            multiline\n                            placeholder=\"请输入文本\"\n                            onChange={this.handleChange}\n                            value={this.state.text}\n                            rowsMax={Math.round(this.state.innerHeight / (this.state.innerHeight > 700 ? 40 : 70))}\n                        />\n                        <br/>\n                        <Button\n                            size=\"large\"\n                            id=\"button\"\n                            disabled={this.state.buttonDisabled}\n                            type=\"submit\"\n                            style={{\n                                margin: 24\n                            }}\n                            variant=\"outlined\"\n                        >\n                            玉 音 放 送\n                        </Button>\n                    </form>\n                    {this.state.progress != null ? <LinearProgress\n                        variant={this.state.progress !== 1 && this.state.progress !== 0 ? \"determinate\" : \"query\"}\n                        value={this.state.progress * 100}\n                        style={{marginBottom: 24}}\n                    /> : \"\"}\n                    <AudioPane audio={this.state.audio} play={this.state.play}/>\n                </div>\n                {snackbar}\n                <a href={\"https://github.com/dnmkrgi/xi-speech-synthesizer\"}>\n                    <Avatar id={\"about\"}>\n                        <GitHubIcon />\n                    </Avatar>\n                </a>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#fafafa'\n        }\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n            <App />\n    </MuiThemeProvider>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}